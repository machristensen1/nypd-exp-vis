knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = TRUE)
library(tidyverse)
library(crosstable) #crosstables for presentation of tabulated data
library(zoo) #for na.approx
library(flextable)
library(corrplot)
shooting_data <-
read.csv("https://data.cityofnewyork.us/api/views/833y-fsy8/rows.csv")
pop_data <-
read.csv("New_York_City_Population_by_Borough__1950_-_2040.csv")
glimpse(shooting_data)
#Removing/renaming columns
shooting_data <- shooting_data %>%
rename(Date = "OCCUR_DATE", BOROUGH = "BORO",
PERP_AGE = "PERP_AGE_GROUP", VIC_AGE = "VIC_AGE_GROUP") %>%
select(-c(INCIDENT_KEY,OCCUR_TIME,LOC_OF_OCCUR_DESC, PRECINCT,
JURISDICTION_CODE, LOC_CLASSFCTN_DESC,LOCATION_DESC,
STATISTICAL_MURDER_FLAG,
X_COORD_CD,Y_COORD_CD,Latitude,Longitude,Lon_Lat))
#Adjusting characters to factors
shooting_data <- as.data.frame(unclass(shooting_data), stringsAsFactors = TRUE)
sapply(shooting_data[-1], levels)
#Cleaning empty/trash factors
shooting_data <- shooting_data %>%
replace(shooting_data == "(null)", "") %>%
replace(shooting_data == "1020", "UNKNOWN") %>%
replace(shooting_data == "224", "UNKNOWN") %>%
replace(shooting_data == "940", "UNKNOWN") %>%
replace(shooting_data == "1022", "UNKNOWN")
shooting_data <- shooting_data %>%
replace(shooting_data == "" | shooting_data == " ", NA) %>%
replace_na(list(PERP_AGE="UNKNOWN", PERP_SEX = "U",
PERP_RACE = "UNKNOWN", VIC_AGE="UNKNOWN",
VIC_SEX = "U", VIC_RACE = "UNKNOWN")) %>%
droplevels()
#Renaming Factor Levels for Future Tables
fct_count(shooting_data$PERP_RACE)
levels(shooting_data$PERP_RACE) <- c("AIAN", "AAPI", "B", "B H",
"UNKNOWN", "W", "W H")
levels(shooting_data$VIC_RACE) <- c("AIAN", "AAPI", "B", "B H",
"UNKNOWN", "W", "W H")
#Adjusting date format
shooting_data <- shooting_data %>%
mutate(Date = mdy(Date)) %>%
mutate(Year = year(Date)) %>%
arrange(Date)
shooting_data <- shooting_data %>%
group_by(BOROUGH, Year) %>%
mutate(cases = n()) %>%
ungroup()
shooting_data$Year <- as.integer(shooting_data$Year)
#Wrangling population data
pop_data <- pop_data %>%
select(-c(Age.Group,
X1950:X1990...Boro.share.of.NYC.total,
X2000...Boro.share.of.NYC.total,
X2010...Boro.share.of.NYC.total,
X2020...Boro.share.of.NYC.total:X2040...Boro.share.of.NYC.total))%>%
rename("BOROUGH" = "Borough", "2000" = "X2000",
"2010" = "X2010", "2020" = "X2020")
pop_data$BOROUGH <- pop_data$BOROUGH %>%
toupper() %>% trimws("l")
pop_data <- pop_data %>%
pivot_longer(cols = -c(BOROUGH), names_to ="Year", values_to = "Population")
pop_data$Year <- as.integer(pop_data$Year)
#Interpolating Population Data
pop_data <- pop_data %>%
group_by(BOROUGH) %>%
complete(Year = full_seq(2000:2022,1)) %>%
#In this line, we are interpolating the population between years.
#Alternatively, we could use the nearest available
#year without changing results significantly.
mutate_all(na.approx, rule = 2)
#Appending Population Data to Main Data Set
shooting_data <- left_join(shooting_data, pop_data, by = c("BOROUGH" = "BOROUGH",
"Year" = "Year"))
#Cases by borough
shootings_by_borough <- shooting_data %>%
group_by(BOROUGH, Year) %>%
summarize(cases = max(cases), Population = round(max(Population),0)) %>%
mutate(cases_per_thou = cases * 1000 / Population) %>%
ungroup()
shooting_totals <- shooting_data %>%
group_by(Year) %>%
summarize(cases = max(cases), Population = round(max(Population),0)) %>%
mutate(cases_per_thou = cases * 1000 / Population) %>%
ungroup()
shooting_totals %>%
ggplot(aes(x=Year,y=cases)) +
geom_line() +
geom_point() +
theme(legend.position="bottom",
axis.text.x = element_text(angle=90)) +
labs(title = "Shooting Incidents in NYC", y=NULL)
est_1 <- lm(cases ~ Year, data = shooting_totals)
est_2 <- lm(cases ~ poly(Year,2), data = shooting_totals)
est_3 <- lm(cases ~ poly(Year,3), data = shooting_totals)
est_4 <- lm(cases ~ poly(Year,4), data = shooting_totals)
est_5 <- lm(cases ~ poly(Year,5), data = shooting_totals)
anova(est_1,est_2,est_3,est_4,est_5)
summary(est_4)
shooting_totals %>%
ggplot(aes(x=Year,y=cases)) +
geom_smooth(method = "lm", formula = y ~ poly(x,4)) +
geom_point() +
theme(legend.position="bottom",
axis.text.x = element_text(angle=90)) +
labs(title = "Shooting Incidents in NYC", y=NULL)
shootings_by_borough %>%
ggplot(aes(x=Year,y=cases,color = BOROUGH)) +
geom_smooth(method = "lm", formula = y ~ poly(x,4)) +
geom_point() +
theme(legend.position="bottom",
axis.text.x = element_text(angle=90)) +
labs(title = "Shooting Incidents by Borough", y=NULL)
shootings_by_borough %>%
ggplot(aes(x=BOROUGH,y=cases))+
geom_boxplot()
shootings_by_borough %>%
ggplot(aes(x=Year,y=cases_per_thou,color = BOROUGH)) +
geom_smooth(method = "lm", formula = y ~ poly(x,4)) +
geom_point() +
theme(legend.position="bottom",
axis.text.x = element_text(angle=90)) +
labs(title = "Shooting Incidents by Borough per Thousand", y=NULL)
shootings_by_borough %>%
ggplot(aes(x=BOROUGH,y=cases_per_thou))+
geom_boxplot()
shootings_by_borough %>%
group_by(BOROUGH) %>%
summarise(casetot=sum(cases), mean = mean(cases),
mean_thou = mean(cases_per_thou), borosd = sd(cases),
sd_thou= sd(cases_per_thou)) %>%
arrange(mean_thou)
corrplot(shooting_data, method = 'ellipse', order = 'AOE', type = 'upper')
View(shootings_by_borough)
View(shooting_data)
corrtable <- shooting_data %>% select(-c(Date, BOROUGH, Year, cases, Population))
corrplot(shooting_data, method = 'ellipse', order = 'AOE', type = 'upper')
View(est_3)
corrtable <- shooting_data %>% select(-c(Date, BOROUGH, Year, cases, Population))
corrplot(shooting_data, method = 'ellipse', order = 'AOE', type = 'upper')
corrtable <- shooting_data %>% select(-c(Date, BOROUGH, Year, cases, Population))
corrplot(corrtable, method = 'ellipse', order = 'AOE', type = 'upper')
A <- shooting_data %>% select(-c(Date, BOROUGH, Year, cases, Population))
corrplot(cor(A), method = 'ellipse', order = 'AOE', type = 'upper')
race_table <- race_table %>%
filter_all(all_vars(. != "AAPI")) %>%
filter_all(all_vars(. != "AIAN")) %>%
droplevels() %>%
mutate(VIC_RACE = set_label(VIC_RACE, "Victim Race"),
PERP_RACE = set_label(PERP_RACE, "Perpetrator Race"))
#Sex Data
sex_table <- shooting_data %>%
select(VIC_SEX, PERP_SEX) %>%
filter_all(all_vars(. !="U")) %>%
droplevels() %>%
mutate(VIC_SEX = set_label(VIC_SEX, "Victim Sex"),
PERP_SEX = set_label(PERP_SEX, "Perpetrator Sex"))
sex_table %>%
crosstable(c(PERP_SEX), by = VIC_SEX, total = "both") %>%
as_flextable() %>% fit_to_width(6.5)
chisq.test(table(sex_table))
library(tidyverse)
library(crosstable) #crosstables for presentation of tabulated data
library(zoo) #for na.approx
library(flextable)
library(rcompanion)
library(rcompanion)
install.packages("rcompanion")
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = TRUE)
library(tidyverse)
library(crosstable) #crosstables for presentation of tabulated data
library(zoo) #for na.approx
library(flextable)
library(rcompanion)
shooting_data <-
read.csv("https://data.cityofnewyork.us/api/views/833y-fsy8/rows.csv")
pop_data <-
read.csv("New_York_City_Population_by_Borough__1950_-_2040.csv")
glimpse(shooting_data)
#Removing/renaming columns
shooting_data <- shooting_data %>%
rename(Date = "OCCUR_DATE", BOROUGH = "BORO",
PERP_AGE = "PERP_AGE_GROUP", VIC_AGE = "VIC_AGE_GROUP") %>%
select(-c(INCIDENT_KEY,OCCUR_TIME,LOC_OF_OCCUR_DESC, PRECINCT,
JURISDICTION_CODE, LOC_CLASSFCTN_DESC,LOCATION_DESC,
STATISTICAL_MURDER_FLAG,
X_COORD_CD,Y_COORD_CD,Latitude,Longitude,Lon_Lat))
#Adjusting characters to factors
shooting_data <- as.data.frame(unclass(shooting_data), stringsAsFactors = TRUE)
sapply(shooting_data[-1], levels)
#Cleaning empty/trash factors
shooting_data <- shooting_data %>%
replace(shooting_data == "(null)", "") %>%
replace(shooting_data == "1020", "UNKNOWN") %>%
replace(shooting_data == "224", "UNKNOWN") %>%
replace(shooting_data == "940", "UNKNOWN") %>%
replace(shooting_data == "1022", "UNKNOWN")
shooting_data <- shooting_data %>%
replace(shooting_data == "" | shooting_data == " ", NA) %>%
replace_na(list(PERP_AGE="UNKNOWN", PERP_SEX = "U",
PERP_RACE = "UNKNOWN", VIC_AGE="UNKNOWN",
VIC_SEX = "U", VIC_RACE = "UNKNOWN")) %>%
droplevels()
#Renaming Factor Levels for Future Tables
fct_count(shooting_data$PERP_RACE)
levels(shooting_data$PERP_RACE) <- c("AIAN", "AAPI", "B", "B H",
"UNKNOWN", "W", "W H")
levels(shooting_data$VIC_RACE) <- c("AIAN", "AAPI", "B", "B H",
"UNKNOWN", "W", "W H")
#Adjusting date format
shooting_data <- shooting_data %>%
mutate(Date = mdy(Date)) %>%
mutate(Year = year(Date)) %>%
arrange(Date)
shooting_data <- shooting_data %>%
group_by(BOROUGH, Year) %>%
mutate(cases = n()) %>%
ungroup()
shooting_data$Year <- as.integer(shooting_data$Year)
#Wrangling population data
pop_data <- pop_data %>%
select(-c(Age.Group,
X1950:X1990...Boro.share.of.NYC.total,
X2000...Boro.share.of.NYC.total,
X2010...Boro.share.of.NYC.total,
X2020...Boro.share.of.NYC.total:X2040...Boro.share.of.NYC.total))%>%
rename("BOROUGH" = "Borough", "2000" = "X2000",
"2010" = "X2010", "2020" = "X2020")
pop_data$BOROUGH <- pop_data$BOROUGH %>%
toupper() %>% trimws("l")
pop_data <- pop_data %>%
pivot_longer(cols = -c(BOROUGH), names_to ="Year", values_to = "Population")
pop_data$Year <- as.integer(pop_data$Year)
#Interpolating Population Data
pop_data <- pop_data %>%
group_by(BOROUGH) %>%
complete(Year = full_seq(2000:2022,1)) %>%
#In this line, we are interpolating the population between years.
#Alternatively, we could use the nearest available
#year without changing results significantly.
mutate_all(na.approx, rule = 2)
#Appending Population Data to Main Data Set
shooting_data <- left_join(shooting_data, pop_data, by = c("BOROUGH" = "BOROUGH",
"Year" = "Year"))
#Cases by borough
shootings_by_borough <- shooting_data %>%
group_by(BOROUGH, Year) %>%
summarize(cases = max(cases), Population = round(max(Population),0)) %>%
mutate(cases_per_thou = cases * 1000 / Population) %>%
ungroup()
shooting_totals <- shooting_data %>%
group_by(Year) %>%
summarize(cases = max(cases), Population = round(max(Population),0)) %>%
mutate(cases_per_thou = cases * 1000 / Population) %>%
ungroup()
shooting_totals %>%
ggplot(aes(x=Year,y=cases)) +
geom_line() +
geom_point() +
theme(legend.position="bottom",
axis.text.x = element_text(angle=90)) +
labs(title = "Shooting Incidents in NYC", y=NULL)
est_1 <- lm(cases ~ Year, data = shooting_totals)
est_2 <- lm(cases ~ poly(Year,2), data = shooting_totals)
est_3 <- lm(cases ~ poly(Year,3), data = shooting_totals)
est_4 <- lm(cases ~ poly(Year,4), data = shooting_totals)
est_5 <- lm(cases ~ poly(Year,5), data = shooting_totals)
anova(est_1,est_2,est_3,est_4,est_5)
summary(est_4)
shooting_totals %>%
ggplot(aes(x=Year,y=cases)) +
geom_smooth(method = "lm", formula = y ~ poly(x,4)) +
geom_point() +
theme(legend.position="bottom",
axis.text.x = element_text(angle=90)) +
labs(title = "Shooting Incidents in NYC", y=NULL)
shootings_by_borough %>%
ggplot(aes(x=Year,y=cases,color = BOROUGH)) +
geom_smooth(method = "lm", formula = y ~ poly(x,4)) +
geom_point() +
theme(legend.position="bottom",
axis.text.x = element_text(angle=90)) +
labs(title = "Shooting Incidents by Borough", y=NULL)
shootings_by_borough %>%
ggplot(aes(x=BOROUGH,y=cases))+
geom_boxplot()
shootings_by_borough %>%
ggplot(aes(x=Year,y=cases_per_thou,color = BOROUGH)) +
geom_smooth(method = "lm", formula = y ~ poly(x,4)) +
geom_point() +
theme(legend.position="bottom",
axis.text.x = element_text(angle=90)) +
labs(title = "Shooting Incidents by Borough per Thousand", y=NULL)
shootings_by_borough %>%
ggplot(aes(x=BOROUGH,y=cases_per_thou))+
geom_boxplot()
shootings_by_borough %>%
group_by(BOROUGH) %>%
summarise(casetot=sum(cases), mean = mean(cases),
mean_thou = mean(cases_per_thou), borosd = sd(cases),
sd_thou= sd(cases_per_thou)) %>%
arrange(mean_thou)
age_table <- shooting_data %>%
select(VIC_AGE, PERP_AGE) %>%
filter_all(all_vars(. !="UNKNOWN")) %>%
droplevels() %>%
mutate(VIC_AGE = set_label(VIC_AGE, "Victim Age"),
PERP_AGE = set_label(PERP_AGE, "Perpetrator Age"))
age_table %>%
crosstable(c(PERP_AGE), by = VIC_AGE, total = "both") %>%
as_flextable() %>% fit_to_width(6.5)
fct_count(age_table$VIC_AGE)
#Combine age groups
age_table$PERP_AGE <-
fct_collapse(age_table$PERP_AGE, "45+" = c("45-64", "65+"))
age_table$VIC_AGE <-
fct_collapse(age_table$VIC_AGE, "45+" = c("45-64", "65+"))
age_table %>%
crosstable(c(PERP_AGE), by = VIC_AGE, total = "both") %>%
as_flextable() %>% fit_to_width(6.5)
chisq.test(table(age_table))
#Race Data
race_table <- shooting_data %>%
select(VIC_RACE, PERP_RACE) %>%
filter_all(all_vars(. !="UNKNOWN")) %>%
droplevels() %>%
mutate(VIC_RACE = set_label(VIC_RACE, "Victim Race"),
PERP_RACE = set_label(PERP_RACE, "Perpetrator Race"))
race_table %>%
crosstable(c(PERP_RACE), by = VIC_RACE, total = "both") %>%
as_flextable() %>% fit_to_width(6.5)
race_table <- race_table %>%
filter_all(all_vars(. != "AAPI")) %>%
filter_all(all_vars(. != "AIAN")) %>%
droplevels() %>%
mutate(VIC_RACE = set_label(VIC_RACE, "Victim Race"),
PERP_RACE = set_label(PERP_RACE, "Perpetrator Race"))
race_table %>%
crosstable(c(PERP_RACE), by = VIC_RACE, total = "both") %>%
as_flextable() %>% fit_to_width(6.5)
chisq.test(table(race_table))
cranmerV(table(race_table))
race_table <- race_table %>%
filter_all(all_vars(. != "AAPI")) %>%
filter_all(all_vars(. != "AIAN")) %>%
droplevels() %>%
mutate(VIC_RACE = set_label(VIC_RACE, "Victim Race"),
PERP_RACE = set_label(PERP_RACE, "Perpetrator Race"))
race_table %>%
crosstable(c(PERP_RACE), by = VIC_RACE, total = "both") %>%
as_flextable() %>% fit_to_width(6.5)
chisq.test(table(race_table))
cramerV(table(race_table))
#Sex Data
sex_table <- shooting_data %>%
select(VIC_SEX, PERP_SEX) %>%
filter_all(all_vars(. !="U")) %>%
droplevels() %>%
mutate(VIC_SEX = set_label(VIC_SEX, "Victim Sex"),
PERP_SEX = set_label(PERP_SEX, "Perpetrator Sex"))
sex_table %>%
crosstable(c(PERP_SEX), by = VIC_SEX, total = "both") %>%
as_flextable() %>% fit_to_width(6.5)
chisq.test(table(sex_table))
cramerV(table(sex_table))
fct_count(age_table$VIC_AGE)
#Combine age groups
age_table$PERP_AGE <-
fct_collapse(age_table$PERP_AGE, "45+" = c("45-64", "65+"))
age_table$VIC_AGE <-
fct_collapse(age_table$VIC_AGE, "45+" = c("45-64", "65+"))
age_table %>%
crosstable(c(PERP_AGE), by = VIC_AGE, total = "both") %>%
as_flextable() %>% fit_to_width(6.5)
chisq.test(table(age_table))
cramerV(table(age_table))
